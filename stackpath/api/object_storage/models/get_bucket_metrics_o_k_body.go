// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetBucketMetricsOKBody A collection of metrics
// swagger:model getBucketMetricsOKBody
type GetBucketMetricsOKBody struct {

	// data
	Data *GetBucketMetricsOKBodyData `json:"data,omitempty"`

	// The error encountered when querying for metrics
	Error string `json:"error,omitempty"`

	// The type of error encountered when querying for metrics
	ErrorType string `json:"errorType,omitempty"`

	// A metrics query's resulting status
	// Enum: [SUCCESS ERROR]
	Status *string `json:"status,omitempty"`

	// Warnings encountered when querying for metrics
	Warnings []string `json:"warnings"`
}

// Validate validates this get bucket metrics o k body
func (m *GetBucketMetricsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetBucketMetricsOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	if m.Data != nil {
		if err := m.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data")
			}
			return err
		}
	}

	return nil
}

var getBucketMetricsOKBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SUCCESS","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getBucketMetricsOKBodyTypeStatusPropEnum = append(getBucketMetricsOKBodyTypeStatusPropEnum, v)
	}
}

const (

	// GetBucketMetricsOKBodyStatusSUCCESS captures enum value "SUCCESS"
	GetBucketMetricsOKBodyStatusSUCCESS string = "SUCCESS"

	// GetBucketMetricsOKBodyStatusERROR captures enum value "ERROR"
	GetBucketMetricsOKBodyStatusERROR string = "ERROR"
)

// prop value enum
func (m *GetBucketMetricsOKBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getBucketMetricsOKBodyTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GetBucketMetricsOKBody) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", *m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetBucketMetricsOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetBucketMetricsOKBody) UnmarshalBinary(b []byte) error {
	var res GetBucketMetricsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
