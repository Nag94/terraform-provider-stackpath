// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateBucketParamsBody update bucket params body
// swagger:model updateBucketParamsBody
type UpdateBucketParamsBody struct {

	// - PRIVATE: The bucket is private and only accessibly with credentials
	//  - PUBLIC: The bucket is public and accessible over the internet
	// Enum: [PRIVATE PUBLIC]
	Visibility *string `json:"visibility,omitempty"`
}

// Validate validates this update bucket params body
func (m *UpdateBucketParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVisibility(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var updateBucketParamsBodyTypeVisibilityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PRIVATE","PUBLIC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateBucketParamsBodyTypeVisibilityPropEnum = append(updateBucketParamsBodyTypeVisibilityPropEnum, v)
	}
}

const (

	// UpdateBucketParamsBodyVisibilityPRIVATE captures enum value "PRIVATE"
	UpdateBucketParamsBodyVisibilityPRIVATE string = "PRIVATE"

	// UpdateBucketParamsBodyVisibilityPUBLIC captures enum value "PUBLIC"
	UpdateBucketParamsBodyVisibilityPUBLIC string = "PUBLIC"
)

// prop value enum
func (m *UpdateBucketParamsBody) validateVisibilityEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, updateBucketParamsBodyTypeVisibilityPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *UpdateBucketParamsBody) validateVisibility(formats strfmt.Registry) error {

	if swag.IsZero(m.Visibility) { // not required
		return nil
	}

	// value enum
	if err := m.validateVisibilityEnum("visibility", "body", *m.Visibility); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UpdateBucketParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateBucketParamsBody) UnmarshalBinary(b []byte) error {
	var res UpdateBucketParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
