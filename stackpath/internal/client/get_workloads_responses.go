// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/stackpath/terraform-provider-stackpath/stackpath/internal/models"
)

// GetWorkloadsReader is a Reader for the GetWorkloads structure.
type GetWorkloadsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkloadsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetWorkloadsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetWorkloadsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetWorkloadsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetWorkloadsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetWorkloadsOK creates a GetWorkloadsOK with default headers values
func NewGetWorkloadsOK() *GetWorkloadsOK {
	return &GetWorkloadsOK{}
}

/*GetWorkloadsOK handles this case with default header values.

GetWorkloadsOK get workloads Ok
*/
type GetWorkloadsOK struct {
	Payload *models.V1GetWorkloadsResponse
}

func (o *GetWorkloadsOK) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads][%d] getWorkloadsOk  %+v", 200, o.Payload)
}

func (o *GetWorkloadsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1GetWorkloadsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkloadsUnauthorized creates a GetWorkloadsUnauthorized with default headers values
func NewGetWorkloadsUnauthorized() *GetWorkloadsUnauthorized {
	return &GetWorkloadsUnauthorized{}
}

/*GetWorkloadsUnauthorized handles this case with default header values.

Returned when an unauthorized request is attempted.
*/
type GetWorkloadsUnauthorized struct {
	Payload *models.StackpathapiStatus
}

func (o *GetWorkloadsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads][%d] getWorkloadsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkloadsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkloadsInternalServerError creates a GetWorkloadsInternalServerError with default headers values
func NewGetWorkloadsInternalServerError() *GetWorkloadsInternalServerError {
	return &GetWorkloadsInternalServerError{}
}

/*GetWorkloadsInternalServerError handles this case with default header values.

Internal server error.
*/
type GetWorkloadsInternalServerError struct {
	Payload *models.StackpathapiStatus
}

func (o *GetWorkloadsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads][%d] getWorkloadsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWorkloadsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkloadsDefault creates a GetWorkloadsDefault with default headers values
func NewGetWorkloadsDefault(code int) *GetWorkloadsDefault {
	return &GetWorkloadsDefault{
		_statusCode: code,
	}
}

/*GetWorkloadsDefault handles this case with default header values.

Default error structure.
*/
type GetWorkloadsDefault struct {
	_statusCode int

	Payload *models.StackpathapiStatus
}

// Code gets the status code for the get workloads default response
func (o *GetWorkloadsDefault) Code() int {
	return o._statusCode
}

func (o *GetWorkloadsDefault) Error() string {
	return fmt.Sprintf("[GET /workload/v1/stacks/{stack_id}/workloads][%d] GetWorkloads default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkloadsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StackpathapiStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
